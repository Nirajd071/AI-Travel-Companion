apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-travel-backend
  namespace: ai-travel
  labels:
    app: ai-travel-backend
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-travel-backend
  template:
    metadata:
      labels:
        app: ai-travel-backend
        tier: backend
    spec:
      containers:
      - name: backend
        image: ai-travel/backend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: db-user
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: db-password
        - name: REDIS_HOST
          value: "redis-service"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: jwt-secret
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-keys
              key: openai-api-key
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: ai-travel
spec:
  selector:
    app: ai-travel-backend
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  type: ClusterIP
